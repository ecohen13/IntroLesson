- Class: meta
  Course: FSI 2015
  Lesson: IntroLessonV1
  Author: Elisha Cohen
  Type: Standard
  Organization: Princeton University
  Version: 2.3.0
  
- Class: text
  Output: "These excercises are a companion to Chapter 1 of A 'First Course in Quantitative Social Science'. When you see ... press Enter."
  
- Class: text
  Output: "If at anytime you need more help related to R you can type help.start() at the prompt which will open an index of R materials. Many R resources are also available on the web and are easily found through a websearch."

- Class: text
  Output: "We will start by practicing arithmetic operations by using R as a basic calculator. Common operators are '+', '-', '*', '/', '^' (where x ^ 2 means x `squared`) and 'sqrt()'."
  
- Class: cmd_question
  Output: "How would you type 8 minus 2?"
  CorrectAnswer: 8 - 2
  AnswerTests: omnitest(correctExpr='8 - 2')
  Hint: See arithmetic operations
  
- Class: cmd_question
  Output: "How would you multiply 4 by 7?"
  CorrectAnswer: 4 * 7
  AnswerTests: omnitest(correctExpr='4 * 7')
  Hint: See arithmetic operations
  
- Class: cmd_question
  Output: "How would square 10?"
  CorrectAnswer: 10 ^ 2
  AnswerTests: omnitest(correctExpr='10 ^ 2')
  Hint: See arithmetic operations
  
- Class: cmd_question
  Output: "How would you multiply 2 times the quantity 9 plus 1?"
  CorrectAnswer: 2 * (9 + 1)
  AnswerTests: any_of_exprs('2 * (9 + 1)', '(9 + 1) * 2')
  Hint: See arithmetic operations
  
- Class: cmd_question
  Output: "How would you take the square root of 9?"
  CorrectAnswer: sqrt(9)
  AnswerTests: omnitest(correctExpr='sqrt(9)')
  Hint: See 'arithmetic operations'
  
- Class: text
  Output: "Next, we will practice creating objects and assigning values to them. We use '<-' to assign some value to an object."
  
- Class: cmd_question
  Output: "Try assigning the value '8 - 2' to the object 'result'"
  CorrectAnswer: result <- 8 - 2
  AnswerTests: omnitest(correctExpr='result <- 8 - 2')
  Hint: See 'objects'
  
- Class: text
  Output: "After we have created an object we can call it by typing the object's name."
  
- Class: cmd_question
  Output: "Call the object 'result' that we created above."
  CorrectAnswer: result
  AnswerTests: omnitest(correctExpr='result')
  Hint: See 'objects'
  
- Class: text
  Output: "We can also assign a string of characters by using quotation marks"
  
- Class: cmd_question
  Output: "Assign the phrase 'social science' to the object 'course'."
  CorrectAnswer: course <- "social science"
  AnswerTests: omnitest(correctExpr='course <- "social science"')
  Hint: See 'objects'
  
- Class: text
  Output: "In character strings spaces are allowed. We can also replace an object by assigning a new value to it."
  
- Class: cmd_question
  Output: "Replace the object 'course', which we defined above, with the phrase 'learning R'."
  CorrectAnswer: course <- "learning R"
  AnswerTests: omnitest(correctExpr='course <- "learning R"')
  Hint: See 'objects'
  
- Class: text
  Output: "R will treat numbers like characters if you tell it to. However, you will no longer be able to use arithmetic operations on the object."
  
- Class: cmd_question
  Output: "Replace the object 'result' with the character '8'"
  CorrectAnswer: result <- "8"
  AnswerTests: omnitest(correctExpr='result <- "8"')
  Hint: See 'objects'
  
- Class: text
  Output: "Next, we are going to start working with real data estimates of world population (in thousands). A vector of data called 'world.pop' has been loaded with this lesson. The first element is for 1950 up to the last element for 2010."
  
- Class: cmd_question
  Output: "Call the object 'world.pop' to see what it looks like."
  CorrectAnswer: world.pop
  AnswerTests: omnitest(correctExpr='world.pop')
  Hint: See 'vectors'
  
- Class: cmd_question
  Output: "Let's use indexing to look at the 4th element of the vector."
  CorrectAnswer: world.pop[4]
  AnswerTests: omnitest(correctExpr='world.pop[4]')
  Hint: See 'vectors'

- Class: mult_question
  Output: "Which function is used to concatenate different elements of a vector?"
  AnswerChoices: "a(); b(); c()"
  CorrectAnswer: c()
  AnswerTests: omnitest(correctVal = "c()")
  Hint: See 'vectors'
  
- Class: cmd_question
  Output: "Use indexing and the concatenate function to call just the 1st and 4th elements of world.pop."
  CorrectAnswer: world.pop[c(1,4)]
  AnswerTests: omnitest(correctExpr='world.pop[c(1,4)]')
  Hint: See 'vectors'
  
- Class: text
  Output: "world.pop is a numeric vector so we can perform arithmetic operations on it."
  
- Class: cmd_question
  Output: "Divide each element of world.pop by 1000 and assign it to an object called 'pop.million'."
  CorrectAnswer: pop.million <- world.pop / 1000
  AnswerTests: omnitest(correctExpr='pop.million <- world.pop / 1000')
  Hint: See 'vectors'
  
- Class: text
  Output: "Next we are going to practice using functions."
  
- Class: cmd_question
  Output: "What is the length (the number of elements) of the world.pop vector?"
  CorrectAnswer: length(world.pop)
  AnswerTests: omnitest(correctExpr='length(world.pop)')
  Hint: See 'functions'
  
- Class: mult_question
  Output: "Which function is used to find the maximum?"
  AnswerChoices: "min(); max(); sum()"
  CorrectAnswer: max()
  AnswerTests: omnitest(correctVal = "max()")
  Hint: See 'functions'
  
- Class: cmd_question
  Output: "Create a vector using the sequence function that goes from 1950 to 2010 by increments of 10. Assign this vector to an object called 'year'"
  CorrectAnswer: year <- seq(from = 1950, to = 2010, by = 10)
  AnswerTests: any_of_exprs('year <- seq(from = 1950, to = 2010, by = 10)', 'year <- seq(1950, 2010, 10)')
  Hint: See 'functions'
  
- Class: cmd_question
  Output: "Use the year vector just created to assign names to the world.pop vector."
  CorrectAnswer: names(world.pop) <- year
  AnswerTests: omnitest(correctExpr='names(world.pop) <- year')
  Hint: See 'functions'
  
- Class: mult_question
  Output: "Which function is used to load an external CSV file?"
  AnswerChoices: "read.csv(); import(); upload()"
  CorrectAnswer: read.csv()
  AnswerTests: omnitest(correctVal = "read.csv()")
  Hint: see 'data files'
  
- Class: text
  Output: "A data frame object called 'UNpop' has already been included in this lesson."
  
- Class: cmd_question
  Output: "What are the dimensions of UNpop?"
  CorrectAnswer: dim(UNpop)
  AnswerTests: omnitest(correctExpr='dim(UNpop)')
  Hint: see 'data files'
  
- Class: mult_question
  Output: "Which operator is used to access an individual variable?"
  AnswerChoices: "%; #; $"
  CorrectAnswer: $
  AnswerTests: omnitest(correctVal = "$")
  Hint: see 'data files'
  
- Class: cmd_question
  Output: "Call the variable world.pop form the UNpop data frame"
  CorrectAnswer: UNpop$world.pop
  AnswerTests: omnitest(correctExpr='UNpop$world.pop')
  Hint: see 'data files'
  
- Class: cmd_question
  Output: "Use indexing to look at the last 4 rows and 'year' variable of the UNpop data frame."
  CorrectAnswer: UNpop[4:7, "year"]
  AnswerTests: any_of_exprs('UNpop[4:7, "year"]', 'UNpop[4:7, 2]', 'UNpop$year[4:7]', 'UNpop[c(4:7), "year"]', 'UNpop[c(4:7), 2]', 'UNpop$year[c(4:7)]')
  Hint: see 'data files'
  
- Class: mult_question
  Output: "How are missing values labeled in R?"
  AnswerChoices: "empty; NA; missing"
  CorrectAnswer: NA
  AnswerTests: omnitest(correctVal = "NA")
  Hint: see 'data files'
  
- Class: mult_question
  Output: "Which character is used to write comments?"
  AnswerChoices: "#; *; !"
  CorrectAnswer: #
  AnswerTests: omnitest(correctVal = "#")
  Hint: see 'data files'
  
- Class: cmd_question
  Output: "Which function do we use to load an R package?"
  CorrectAnswer: library()
  AnswerTests: any_of_exprs('library()', 'require()')
  Hint: see 'packages'
  
